<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linkerd on Hori</title>
    <link>//localhost:1313/ko/tags/linkerd/</link>
    <description>Recent content in Linkerd on Hori</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Sun, 01 Jun 2025 00:00:00 +0000</lastBuildDate><atom:link href="//localhost:1313/ko/tags/linkerd/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Linkerd CLI</title>
      <link>//localhost:1313/ko/modules/cli/</link>
      <pubDate>Sun, 01 Jun 2025 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/ko/modules/cli/</guid>
      <description>&lt;h1&gt;Linkerd CLI&lt;/h1&gt;

&lt;p&gt;Linkerd 유지관리자들은 명령줄에서 Linkerd CRD, 제어 플레인 컴포넌트, 확장 기능을 손쉽게 설치·관리할 수 있도록 풍부한 CLI를 제공합니다.&lt;/p&gt;

&lt;h1&gt;사전 요구 사항&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Unix-스타일 셸이 가능한 macOS/Linux/Windows&lt;/li&gt;
&lt;li&gt;로컬 쿠버네티스 클러스터용 k3d(v5+)&lt;/li&gt;
&lt;li&gt;kubectl(v1.25+)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;튜토리얼&lt;/h1&gt;


&lt;h2&gt;1. 로컬 쿠버네티스 클러스터 생성&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;cluster.yaml&lt;/code&gt;을 사용해 k3d로 가벼운 쿠버네티스 클러스터를 띄웁니다:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;k3d cluster create --kubeconfig-update-default \
  -c ./cluster.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;2. Linkerd CLI 설정&lt;/h2&gt;

&lt;p&gt;Linkerd CLI에는 설치할 버전과 바이너리가 설치될 경로를 지정할 수 있는 두 가지 매개변수가 있습니다:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>컨트롤 플레인</title>
      <link>//localhost:1313/ko/control-plane/destination/</link>
      <pubDate>Sun, 01 Jun 2025 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/ko/control-plane/destination/</guid>
      <description>&lt;h1 id=&#34;destination&#34; class=&#34;header-anchor-wrapper&#34;&gt;Destination
  &lt;a href=&#34;#destination&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Linkerd 제어 플레인의 Destination 컨트롤러는 서비스 디스커버리와 라우팅을 담당합니다. 이 컨트롤러는 Kubernetes 리소스(Services, EndpointSlices, Pods, ExternalWorkloads 등)를 공유 인포머(shared informers)를 통해 감시하고, 엔드포인트의 로컬 캐시를 구축하며, 데이터 플레인 프록시로부터의 gRPC 요청을 제공합니다.&lt;/p&gt;

&lt;h1 id=&#34;사전-준비&#34; class=&#34;header-anchor-wrapper&#34;&gt;사전 준비
  &lt;a href=&#34;#%ec%82%ac%ec%a0%84-%ec%a4%80%eb%b9%84&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;macOS/Linux/Windows에서 유닉스 스타일 셸 사용 가능&lt;/li&gt;
&lt;li&gt;로컬 Kubernetes 클러스터용 k3d (v5+) 설치&lt;/li&gt;
&lt;li&gt;kubectl (v1.25+) 설치&lt;/li&gt;
&lt;li&gt;Helm (v3+) 설치&lt;/li&gt;
&lt;li&gt;인증서 생성을 위한 Smallstep (step) CLI&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;튜토리얼&#34; class=&#34;header-anchor-wrapper&#34;&gt;튜토리얼
  &lt;a href=&#34;#%ed%8a%9c%ed%86%a0%eb%a6%ac%ec%96%bc&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h1&gt;


&lt;h2 id=&#34;1-설정-파일-생성&#34; class=&#34;header-anchor-wrapper&#34;&gt;1. 설정 파일 생성
  &lt;a href=&#34;#1-%ec%84%a4%ec%a0%95-%ed%8c%8c%ec%9d%bc-%ec%83%9d%ec%84%b1&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat &amp;lt;&amp;lt; &#39;EOF&#39; &amp;gt; audit-policy.yaml
apiVersion: audit.k8s.io/v1
kind: Policy
rules:
  - level: RequestResponse
    resources:
      - group: &amp;quot;&amp;quot;
        resources: [&amp;quot;*&amp;quot;]
  - level: RequestResponse
    resources:
      - group: &amp;quot;linkerd.io&amp;quot;
        resources: [&amp;quot;*&amp;quot;]
      - group: &amp;quot;policy.linkerd.io&amp;quot;
        resources: [&amp;quot;*&amp;quot;]
      - group: &amp;quot;gateway.networking.k8s.io&amp;quot;
        resources: [&amp;quot;*&amp;quot;]
  - level: None
EOF
cat &amp;lt;&amp;lt; &#39;EOF&#39; &amp;gt; cluster.yaml
apiVersion: k3d.io/v1alpha5
kind: Simple
metadata:
  name: &amp;quot;cluster&amp;quot;
servers: 1
agents: 0
image: rancher/k3s:v1.33.0-k3s1
network: playground
options:
  k3s:
    extraArgs:
      - arg: --disable=traefik
        nodeFilters: [&amp;quot;server:*&amp;quot;]
      - arg: --cluster-cidr=10.23.0.0/16
        nodeFilters: [&amp;quot;server:*&amp;quot;]
      - arg: --service-cidr=10.247.0.0/16
        nodeFilters: [&amp;quot;server:*&amp;quot;]
      - arg: --debug
        nodeFilters: [&amp;quot;server:*&amp;quot;]
      - arg: --kube-apiserver-arg=audit-policy-file=/etc/rancher/k3s/audit-policy.yaml
        nodeFilters: [&amp;quot;server:*&amp;quot;]
      - arg: --kube-apiserver-arg=audit-log-path=/var/log/kubernetes/audit/audit.log
        nodeFilters: [&amp;quot;server:*&amp;quot;]
ports:
  - port: 8081:80
    nodeFilters: [&amp;quot;loadbalancer&amp;quot;]
volumes:
  - volume: &amp;quot;&amp;lt;LOCAL-FULL-PATH&amp;gt;/audit-policy.yaml:/etc/rancher/k3s/audit-policy.yaml&amp;quot;
    nodeFilters: [&amp;quot;server:*&amp;quot;]
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;2-로컬-kubernetes-클러스터-생성&#34; class=&#34;header-anchor-wrapper&#34;&gt;2. 로컬 Kubernetes 클러스터 생성
  &lt;a href=&#34;#2-%eb%a1%9c%ec%bb%ac-kubernetes-%ed%81%b4%eb%9f%ac%ec%8a%a4%ed%84%b0-%ec%83%9d%ec%84%b1&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;k3d와 앞서 만든 cluster.yaml을 사용하여 경량 Kubernetes 클러스터를 시작합니다:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>컨트롤 플레인</title>
      <link>//localhost:1313/ko/control-plane/proxy-injector/</link>
      <pubDate>Sun, 01 Jun 2025 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/ko/control-plane/proxy-injector/</guid>
      <description>&lt;h2 id=&#34;linkerd-proxy-injector&#34; class=&#34;header-anchor-wrapper&#34;&gt;Linkerd Proxy-Injector
  &lt;a href=&#34;#linkerd-proxy-injector&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Proxy-Injector는 변형(Mutating) Webhook을 사용해 새 파드 생성 요청을 가로채고, 어노테이션에 &lt;code&gt;linkerd.io/injected: enabled&lt;/code&gt;가 있으면 Linkerd Proxy 및 ProxyInit 컨테이너를 주입합니다.&lt;/p&gt;

&lt;h2 id=&#34;참고-자료&#34; class=&#34;header-anchor-wrapper&#34;&gt;참고 자료
  &lt;a href=&#34;#%ec%b0%b8%ea%b3%a0-%ec%9e%90%eb%a3%8c&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://linkerd.io/2-edge/reference/architecture/&#34;&gt;https://linkerd.io/2-edge/reference/architecture/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/debug/debug-cluster/audit/&#34;&gt;https://kubernetes.io/docs/tasks/debug/debug-cluster/audit/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>타임아웃</title>
      <link>//localhost:1313/ko/modules/timeouts/</link>
      <pubDate>Sun, 01 Jun 2025 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/ko/modules/timeouts/</guid>
      <description>&lt;h1&gt;타임아웃&lt;/h1&gt;

&lt;p&gt;Linkerd는 메시 내 서비스 간 HTTP 요청 및 TCP 연결의 수명을 세밀하게 제어할 수 있도록 다양한 타임아웃 설정을 제공합니다. 쿠버네티스 서비스 애너테이션을 통해 다음 세 가지 기본 타임아웃 정책을 설정할 수 있습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;timeout.linkerd.io/request:&lt;/strong&gt; 클라이언트가 요청을 전송한 순간부터 서버가 요청 본문의 첫 바이트를 수신할 때까지의 최대 시간&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;timeout.linkerd.io/response:&lt;/strong&gt; 서버 응답 헤더의 첫 바이트를 받은 순간부터 전체 응답 본문이 전달될 때까지의 최대 시간&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;timeout.linkerd.io/idle:&lt;/strong&gt; 요청·응답 데이터 프레임 사이에 트래픽이 없을 때 연결을 닫기 전까지 허용되는 최대 유휴 시간&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;사전 요구 사항&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Unix-스타일 셸이 가능한 macOS/Linux/Windows&lt;/li&gt;
&lt;li&gt;로컬 쿠버네티스 클러스터용 k3d(v5+)&lt;/li&gt;
&lt;li&gt;kubectl(v1.25+)&lt;/li&gt;
&lt;li&gt;Helm(v3+)&lt;/li&gt;
&lt;li&gt;인증서 생성을 위한 Smallstep(step) CLI&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;튜토리얼&lt;/h1&gt;


&lt;h2&gt;1. 구성 파일 생성&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;cat &amp;lt;&amp;lt; &#39;EOF&#39; &amp;gt; cluster.yaml
apiVersion: k3d.io/v1alpha5
kind: Simple
metadata:
  name: &amp;quot;cluster&amp;quot;
servers: 1
agents: 0
image: rancher/k3s:v1.33.0-k3s1
network: playground
options:
  k3s:
    extraArgs:
      - arg: --disable=traefik
        nodeFilters: [&amp;quot;server:*&amp;quot;]
      - arg: --cluster-cidr=10.23.0.0/16
        nodeFilters: [&amp;quot;server:*&amp;quot;]
      - arg: --service-cidr=10.247.0.0/16
        nodeFilters: [&amp;quot;server:*&amp;quot;]
      - arg: --debug
        nodeFilters: [&amp;quot;server:*&amp;quot;]
ports:
  - port: 8081:80
    nodeFilters: [&amp;quot;loadbalancer&amp;quot;]
EOF
cat &amp;lt;&amp;lt; &#39;EOF&#39; &amp;gt; application.yaml
apiVersion: v1
kind: Pod
metadata:
  name: client
  namespace: simple-app
  annotations:
    linkerd.io/inject: enabled
spec:
  containers:
  - name: curl
    image: curlimages/curl:latest
    command: [&amp;quot;sleep&amp;quot;, &amp;quot;infinity&amp;quot;]
---
apiVersion: v1
kind: Namespace
metadata:
  name: simple-app
  annotations:
    linkerd.io/inject: enabled
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
  namespace: simple-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: server
      version: v1
  template:
    metadata:
      labels:
        app: server
        version: v1
    spec:
      containers:
        - name: http-app
          image: kong/httpbin:latest
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: server
  namespace: simple-app
spec:
  selector:
    app: server
    version: v1
  ports:
    - port: 80
      targetPort: 80
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;2. 로컬 쿠버네티스 클러스터 생성&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;cluster.yaml&lt;/code&gt;을 이용해 k3d로 가벼운 쿠버네티스 클러스터를 띄웁니다:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>프록시 초기화</title>
      <link>//localhost:1313/ko/data-plane/proxy-init/</link>
      <pubDate>Sun, 01 Jun 2025 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/ko/data-plane/proxy-init/</guid>
      <description>&lt;h1 id=&#34;프록시-초기화&#34; class=&#34;header-anchor-wrapper&#34;&gt;프록시 초기화
  &lt;a href=&#34;#%ed%94%84%eb%a1%9d%ec%8b%9c-%ec%b4%88%ea%b8%b0%ed%99%94&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;linkerd-init&lt;/code&gt; 컨테이너는 메시 네트워크에 주입된 모든 파드에 쿠버네티스 &lt;strong&gt;Init 컨테이너&lt;/strong&gt;로 추가되며, 애플리케이션 컨테이너들보다 먼저 실행됩니다. 이 컨테이너는 &lt;code&gt;iptables&lt;/code&gt; 규칙을 설정해 파드로 들어오고 나가는 모든 TCP 트래픽을 Linkerd 프록시로 우회시킵니다.&lt;/p&gt;

&lt;h1 id=&#34;사전-요구-사항&#34; class=&#34;header-anchor-wrapper&#34;&gt;사전 요구 사항
  &lt;a href=&#34;#%ec%82%ac%ec%a0%84-%ec%9a%94%ea%b5%ac-%ec%82%ac%ed%95%ad&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Unix-스타일 셸이 가능한 macOS/Linux/Windows&lt;/li&gt;
&lt;li&gt;로컬 쿠버네티스 클러스터용 k3d(v5+)&lt;/li&gt;
&lt;li&gt;kubectl(v1.25+)&lt;/li&gt;
&lt;li&gt;Helm(v3+)&lt;/li&gt;
&lt;li&gt;인증서 생성을 위한 Smallstep(step) CLI&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;튜토리얼&#34; class=&#34;header-anchor-wrapper&#34;&gt;튜토리얼
  &lt;a href=&#34;#%ed%8a%9c%ed%86%a0%eb%a6%ac%ec%96%bc&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h1&gt;


&lt;h2 id=&#34;1-구성-파일-생성&#34; class=&#34;header-anchor-wrapper&#34;&gt;1. 구성 파일 생성
  &lt;a href=&#34;#1-%ea%b5%ac%ec%84%b1-%ed%8c%8c%ec%9d%bc-%ec%83%9d%ec%84%b1&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;cat &amp;lt;&amp;lt; &#39;EOF&#39; &amp;gt; cluster.yaml
apiVersion: k3d.io/v1alpha5
kind: Simple
metadata:
  name: &amp;quot;cluster&amp;quot;
servers: 1
agents: 0
image: rancher/k3s:v1.33.0-k3s1
network: playground
options:
  k3s:
    extraArgs:
      - arg: --disable=traefik
        nodeFilters: [&amp;quot;server:*&amp;quot;]
      - arg: --cluster-cidr=10.23.0.0/16
        nodeFilters: [&amp;quot;server:*&amp;quot;]
      - arg: --service-cidr=10.247.0.0/16
        nodeFilters: [&amp;quot;server:*&amp;quot;]
      - arg: --debug
        nodeFilters: [&amp;quot;server:*&amp;quot;]
ports:
  - port: 8081:80
    nodeFilters: [&amp;quot;loadbalancer&amp;quot;]
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;2-로컬-쿠버네티스-클러스터-생성&#34; class=&#34;header-anchor-wrapper&#34;&gt;2. 로컬 쿠버네티스 클러스터 생성
  &lt;a href=&#34;#2-%eb%a1%9c%ec%bb%ac-%ec%bf%a0%eb%b2%84%eb%84%a4%ed%8b%b0%ec%8a%a4-%ed%81%b4%eb%9f%ac%ec%8a%a4%ed%84%b0-%ec%83%9d%ec%84%b1&#34; class=&#34;header-anchor-link&#34;&gt;
    &lt;svg width=&#34;16px&#34; height=&#34;16px&#34; viewBox=&#34;0 0 24 24&#34;&gt;
&lt;svg
    xmlns=&#34;http://www.w3.org/2000/svg&#34;
    width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34;
    stroke=&#34;currentColor&#34; stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34;
    stroke-linejoin=&#34;round&#34;&gt;
    &lt;line x1=&#34;4&#34; y1=&#34;9&#34; x2=&#34;20&#34; y2=&#34;9&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;4&#34; y1=&#34;15&#34; x2=&#34;20&#34; y2=&#34;15&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;10&#34; y1=&#34;3&#34; x2=&#34;8&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;&lt;line x1=&#34;16&#34; y1=&#34;3&#34; x2=&#34;14&#34; y2=&#34;21&#34;&gt;&lt;/line&gt;
&lt;/svg&gt;

&lt;/svg&gt;
  &lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;cluster.yaml&lt;/code&gt;을 이용해 k3d로 가벼운 쿠버네티스 클러스터를 띄웁니다:&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>